name: Release CI

on:
  push:
    # Sequence of patterns matched against refs/tags
    #    tags:
    #      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10
    branches:
      - master
jobs:
  create-release:
    runs-on: ubuntu-latest
    outputs:
      RELEASE_UPLOAD_ID: ${{ steps.create_release.outputs.id }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

  build-tauri:
    needs: create-release
    strategy:
      fail-fast: false
      matrix:
        platform: [ macos-latest, ubuntu-latest, windows-latest ]

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v2

      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: 16

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"

      - name: Yarn cache
        uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install app dependencies and build it
        run: yarn && yarn electron:build
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Upload File
        # 使用预制action：上传文件，可以将执行路径打包成zip上传
        uses: actions/upload-artifact@v2
        with:
          # 上传后文件的名称
          # 打包的路径以及文件过滤，此为仅打包dist目录下的dmg文件
          path: builder/*